//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ShareStuffModel", "UserLocation", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShareThings.Models.User), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ShareThings.Models.Location), true)]
[assembly: EdmRelationshipAttribute("ShareStuffModel", "ItemRequest", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ShareThings.Models.Item), "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShareThings.Models.Request), true)]
[assembly: EdmRelationshipAttribute("ShareStuffModel", "UserRequest", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ShareThings.Models.User), "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShareThings.Models.Request), true)]
[assembly: EdmRelationshipAttribute("ShareStuffModel", "LocationRequest", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ShareThings.Models.Location), "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShareThings.Models.Request), true)]
[assembly: EdmRelationshipAttribute("ShareStuffModel", "UserItem", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ShareThings.Models.User), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShareThings.Models.Item), true)]
[assembly: EdmRelationshipAttribute("ShareStuffModel", "CategoryItem", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ShareThings.Models.Category), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ShareThings.Models.Item), true)]

#endregion

namespace ShareThings.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ShareStuffEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ShareStuffEntities object using the connection string found in the 'ShareStuffEntities' section of the application configuration file.
        /// </summary>
        public ShareStuffEntities() : base("name=ShareStuffEntities", "ShareStuffEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ShareStuffEntities object.
        /// </summary>
        public ShareStuffEntities(string connectionString) : base(connectionString, "ShareStuffEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ShareStuffEntities object.
        /// </summary>
        public ShareStuffEntities(EntityConnection connection) : base(connection, "ShareStuffEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Request> Requests
        {
            get
            {
                if ((_Requests == null))
                {
                    _Requests = base.CreateObjectSet<Request>("Requests");
                }
                return _Requests;
            }
        }
        private ObjectSet<Request> _Requests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Requests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequests(Request request)
        {
            base.AddObject("Requests", request);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="email">No Metadata Documentation available.</param>
        /// <param name="password">No Metadata Documentation available.</param>
        public ObjectResult<User> usrCheckLogin(global::System.String email, global::System.String password)
        {
            ObjectParameter emailParameter;
            if (email != null)
            {
                emailParameter = new ObjectParameter("email", email);
            }
            else
            {
                emailParameter = new ObjectParameter("email", typeof(global::System.String));
            }
    
            ObjectParameter passwordParameter;
            if (password != null)
            {
                passwordParameter = new ObjectParameter("password", password);
            }
            else
            {
                passwordParameter = new ObjectParameter("password", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<User>("usrCheckLogin", emailParameter, passwordParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="email">No Metadata Documentation available.</param>
        /// <param name="password">No Metadata Documentation available.</param>
        public ObjectResult<User> usrCheckLogin(global::System.String email, global::System.String password, MergeOption mergeOption)
        {
            ObjectParameter emailParameter;
            if (email != null)
            {
                emailParameter = new ObjectParameter("email", email);
            }
            else
            {
                emailParameter = new ObjectParameter("email", typeof(global::System.String));
            }
    
            ObjectParameter passwordParameter;
            if (password != null)
            {
                passwordParameter = new ObjectParameter("password", password);
            }
            else
            {
                passwordParameter = new ObjectParameter("password", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<User>("usrCheckLogin", mergeOption, emailParameter, passwordParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareStuffModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="isPublic">Initial value of the isPublic property.</param>
        public static Category CreateCategory(global::System.Int32 id, global::System.String name, global::System.Boolean isPublic)
        {
            Category category = new Category();
            category.id = id;
            category.name = name;
            category.isPublic = isPublic;
            return category;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isPublic
        {
            get
            {
                return _isPublic;
            }
            set
            {
                OnisPublicChanging(value);
                ReportPropertyChanging("isPublic");
                _isPublic = StructuralObject.SetValidValue(value, "isPublic");
                ReportPropertyChanged("isPublic");
                OnisPublicChanged();
            }
        }
        private global::System.Boolean _isPublic;
        partial void OnisPublicChanging(global::System.Boolean value);
        partial void OnisPublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> parent_id
        {
            get
            {
                return _parent_id;
            }
            set
            {
                Onparent_idChanging(value);
                ReportPropertyChanging("parent_id");
                _parent_id = StructuralObject.SetValidValue(value, "parent_id");
                ReportPropertyChanged("parent_id");
                Onparent_idChanged();
            }
        }
        private Nullable<global::System.Int32> _parent_id;
        partial void Onparent_idChanging(Nullable<global::System.Int32> value);
        partial void Onparent_idChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareStuffModel", "CategoryItem", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("ShareStuffModel.CategoryItem", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("ShareStuffModel.CategoryItem", "Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareStuffModel", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="owner_id">Initial value of the owner_id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="description">Initial value of the description property.</param>
        /// <param name="condition">Initial value of the condition property.</param>
        /// <param name="detail">Initial value of the detail property.</param>
        /// <param name="isPublic">Initial value of the isPublic property.</param>
        /// <param name="category_id">Initial value of the category_id property.</param>
        public static Item CreateItem(global::System.Int32 id, global::System.Int32 owner_id, global::System.String name, global::System.String description, global::System.String condition, global::System.String detail, global::System.Boolean isPublic, global::System.Int32 category_id)
        {
            Item item = new Item();
            item.id = id;
            item.owner_id = owner_id;
            item.name = name;
            item.description = description;
            item.condition = condition;
            item.detail = detail;
            item.isPublic = isPublic;
            item.category_id = category_id;
            return item;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 owner_id
        {
            get
            {
                return _owner_id;
            }
            set
            {
                Onowner_idChanging(value);
                ReportPropertyChanging("owner_id");
                _owner_id = StructuralObject.SetValidValue(value, "owner_id");
                ReportPropertyChanged("owner_id");
                Onowner_idChanged();
            }
        }
        private global::System.Int32 _owner_id;
        partial void Onowner_idChanging(global::System.Int32 value);
        partial void Onowner_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String condition
        {
            get
            {
                return _condition;
            }
            set
            {
                OnconditionChanging(value);
                ReportPropertyChanging("condition");
                _condition = StructuralObject.SetValidValue(value, false, "condition");
                ReportPropertyChanged("condition");
                OnconditionChanged();
            }
        }
        private global::System.String _condition;
        partial void OnconditionChanging(global::System.String value);
        partial void OnconditionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String detail
        {
            get
            {
                return _detail;
            }
            set
            {
                OndetailChanging(value);
                ReportPropertyChanging("detail");
                _detail = StructuralObject.SetValidValue(value, false, "detail");
                ReportPropertyChanged("detail");
                OndetailChanged();
            }
        }
        private global::System.String _detail;
        partial void OndetailChanging(global::System.String value);
        partial void OndetailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isPublic
        {
            get
            {
                return _isPublic;
            }
            set
            {
                OnisPublicChanging(value);
                ReportPropertyChanging("isPublic");
                _isPublic = StructuralObject.SetValidValue(value, "isPublic");
                ReportPropertyChanged("isPublic");
                OnisPublicChanged();
            }
        }
        private global::System.Boolean _isPublic;
        partial void OnisPublicChanging(global::System.Boolean value);
        partial void OnisPublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 category_id
        {
            get
            {
                return _category_id;
            }
            set
            {
                Oncategory_idChanging(value);
                ReportPropertyChanging("category_id");
                _category_id = StructuralObject.SetValidValue(value, "category_id");
                ReportPropertyChanged("category_id");
                Oncategory_idChanged();
            }
        }
        private global::System.Int32 _category_id;
        partial void Oncategory_idChanging(global::System.Int32 value);
        partial void Oncategory_idChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareStuffModel", "ItemRequest", "Request")]
        public EntityCollection<Request> Requests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Request>("ShareStuffModel.ItemRequest", "Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Request>("ShareStuffModel.ItemRequest", "Request", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareStuffModel", "UserItem", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ShareStuffModel.UserItem", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ShareStuffModel.UserItem", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ShareStuffModel.UserItem", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ShareStuffModel.UserItem", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareStuffModel", "CategoryItem", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("ShareStuffModel.CategoryItem", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("ShareStuffModel.CategoryItem", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("ShareStuffModel.CategoryItem", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("ShareStuffModel.CategoryItem", "Category", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareStuffModel", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="description">Initial value of the description property.</param>
        /// <param name="maxUsers">Initial value of the maxUsers property.</param>
        /// <param name="maxTransactions">Initial value of the maxTransactions property.</param>
        /// <param name="isPublic">Initial value of the isPublic property.</param>
        /// <param name="isEnabled">Initial value of the isEnabled property.</param>
        public static Location CreateLocation(global::System.Int32 id, global::System.String name, global::System.String description, global::System.Int32 maxUsers, global::System.Int32 maxTransactions, global::System.Boolean isPublic, global::System.Boolean isEnabled)
        {
            Location location = new Location();
            location.id = id;
            location.name = name;
            location.description = description;
            location.maxUsers = maxUsers;
            location.maxTransactions = maxTransactions;
            location.isPublic = isPublic;
            location.isEnabled = isEnabled;
            return location;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 maxUsers
        {
            get
            {
                return _maxUsers;
            }
            set
            {
                OnmaxUsersChanging(value);
                ReportPropertyChanging("maxUsers");
                _maxUsers = StructuralObject.SetValidValue(value, "maxUsers");
                ReportPropertyChanged("maxUsers");
                OnmaxUsersChanged();
            }
        }
        private global::System.Int32 _maxUsers;
        partial void OnmaxUsersChanging(global::System.Int32 value);
        partial void OnmaxUsersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 maxTransactions
        {
            get
            {
                return _maxTransactions;
            }
            set
            {
                OnmaxTransactionsChanging(value);
                ReportPropertyChanging("maxTransactions");
                _maxTransactions = StructuralObject.SetValidValue(value, "maxTransactions");
                ReportPropertyChanged("maxTransactions");
                OnmaxTransactionsChanged();
            }
        }
        private global::System.Int32 _maxTransactions;
        partial void OnmaxTransactionsChanging(global::System.Int32 value);
        partial void OnmaxTransactionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isPublic
        {
            get
            {
                return _isPublic;
            }
            set
            {
                OnisPublicChanging(value);
                ReportPropertyChanging("isPublic");
                _isPublic = StructuralObject.SetValidValue(value, "isPublic");
                ReportPropertyChanged("isPublic");
                OnisPublicChanged();
            }
        }
        private global::System.Boolean _isPublic;
        partial void OnisPublicChanging(global::System.Boolean value);
        partial void OnisPublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String locationCode
        {
            get
            {
                return _locationCode;
            }
            set
            {
                OnlocationCodeChanging(value);
                ReportPropertyChanging("locationCode");
                _locationCode = StructuralObject.SetValidValue(value, true, "locationCode");
                ReportPropertyChanged("locationCode");
                OnlocationCodeChanged();
            }
        }
        private global::System.String _locationCode;
        partial void OnlocationCodeChanging(global::System.String value);
        partial void OnlocationCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isEnabled
        {
            get
            {
                return _isEnabled;
            }
            set
            {
                OnisEnabledChanging(value);
                ReportPropertyChanging("isEnabled");
                _isEnabled = StructuralObject.SetValidValue(value, "isEnabled");
                ReportPropertyChanged("isEnabled");
                OnisEnabledChanged();
            }
        }
        private global::System.Boolean _isEnabled;
        partial void OnisEnabledChanging(global::System.Boolean value);
        partial void OnisEnabledChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareStuffModel", "UserLocation", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("ShareStuffModel.UserLocation", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("ShareStuffModel.UserLocation", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareStuffModel", "LocationRequest", "Request")]
        public EntityCollection<Request> Requests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Request>("ShareStuffModel.LocationRequest", "Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Request>("ShareStuffModel.LocationRequest", "Request", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareStuffModel", Name="Request")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Request : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Request object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="requestor_id">Initial value of the requestor_id property.</param>
        /// <param name="item_id">Initial value of the item_id property.</param>
        /// <param name="isAccepted">Initial value of the isAccepted property.</param>
        /// <param name="location_id">Initial value of the location_id property.</param>
        /// <param name="isCheckedOut">Initial value of the isCheckedOut property.</param>
        /// <param name="dateRequested">Initial value of the dateRequested property.</param>
        /// <param name="dateRecieved">Initial value of the dateRecieved property.</param>
        /// <param name="dateReturned">Initial value of the dateReturned property.</param>
        /// <param name="dateWantedReturn">Initial value of the dateWantedReturn property.</param>
        /// <param name="giverRating">Initial value of the giverRating property.</param>
        /// <param name="recieverRating">Initial value of the recieverRating property.</param>
        public static Request CreateRequest(global::System.Int32 id, global::System.Int32 requestor_id, global::System.Int32 item_id, global::System.Boolean isAccepted, global::System.Int32 location_id, global::System.Boolean isCheckedOut, global::System.DateTime dateRequested, global::System.DateTime dateRecieved, global::System.DateTime dateReturned, global::System.DateTime dateWantedReturn, global::System.Int32 giverRating, global::System.Int32 recieverRating)
        {
            Request request = new Request();
            request.id = id;
            request.requestor_id = requestor_id;
            request.item_id = item_id;
            request.isAccepted = isAccepted;
            request.location_id = location_id;
            request.isCheckedOut = isCheckedOut;
            request.dateRequested = dateRequested;
            request.dateRecieved = dateRecieved;
            request.dateReturned = dateReturned;
            request.dateWantedReturn = dateWantedReturn;
            request.giverRating = giverRating;
            request.recieverRating = recieverRating;
            return request;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 requestor_id
        {
            get
            {
                return _requestor_id;
            }
            set
            {
                Onrequestor_idChanging(value);
                ReportPropertyChanging("requestor_id");
                _requestor_id = StructuralObject.SetValidValue(value, "requestor_id");
                ReportPropertyChanged("requestor_id");
                Onrequestor_idChanged();
            }
        }
        private global::System.Int32 _requestor_id;
        partial void Onrequestor_idChanging(global::System.Int32 value);
        partial void Onrequestor_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 item_id
        {
            get
            {
                return _item_id;
            }
            set
            {
                Onitem_idChanging(value);
                ReportPropertyChanging("item_id");
                _item_id = StructuralObject.SetValidValue(value, "item_id");
                ReportPropertyChanged("item_id");
                Onitem_idChanged();
            }
        }
        private global::System.Int32 _item_id;
        partial void Onitem_idChanging(global::System.Int32 value);
        partial void Onitem_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String itemWant
        {
            get
            {
                return _itemWant;
            }
            set
            {
                OnitemWantChanging(value);
                ReportPropertyChanging("itemWant");
                _itemWant = StructuralObject.SetValidValue(value, true, "itemWant");
                ReportPropertyChanged("itemWant");
                OnitemWantChanged();
            }
        }
        private global::System.String _itemWant;
        partial void OnitemWantChanging(global::System.String value);
        partial void OnitemWantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isAccepted
        {
            get
            {
                return _isAccepted;
            }
            set
            {
                OnisAcceptedChanging(value);
                ReportPropertyChanging("isAccepted");
                _isAccepted = StructuralObject.SetValidValue(value, "isAccepted");
                ReportPropertyChanged("isAccepted");
                OnisAcceptedChanged();
            }
        }
        private global::System.Boolean _isAccepted;
        partial void OnisAcceptedChanging(global::System.Boolean value);
        partial void OnisAcceptedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 location_id
        {
            get
            {
                return _location_id;
            }
            set
            {
                Onlocation_idChanging(value);
                ReportPropertyChanging("location_id");
                _location_id = StructuralObject.SetValidValue(value, "location_id");
                ReportPropertyChanged("location_id");
                Onlocation_idChanged();
            }
        }
        private global::System.Int32 _location_id;
        partial void Onlocation_idChanging(global::System.Int32 value);
        partial void Onlocation_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isCheckedOut
        {
            get
            {
                return _isCheckedOut;
            }
            set
            {
                OnisCheckedOutChanging(value);
                ReportPropertyChanging("isCheckedOut");
                _isCheckedOut = StructuralObject.SetValidValue(value, "isCheckedOut");
                ReportPropertyChanged("isCheckedOut");
                OnisCheckedOutChanged();
            }
        }
        private global::System.Boolean _isCheckedOut;
        partial void OnisCheckedOutChanging(global::System.Boolean value);
        partial void OnisCheckedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateRequested
        {
            get
            {
                return _dateRequested;
            }
            set
            {
                OndateRequestedChanging(value);
                ReportPropertyChanging("dateRequested");
                _dateRequested = StructuralObject.SetValidValue(value, "dateRequested");
                ReportPropertyChanged("dateRequested");
                OndateRequestedChanged();
            }
        }
        private global::System.DateTime _dateRequested;
        partial void OndateRequestedChanging(global::System.DateTime value);
        partial void OndateRequestedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateRecieved
        {
            get
            {
                return _dateRecieved;
            }
            set
            {
                OndateRecievedChanging(value);
                ReportPropertyChanging("dateRecieved");
                _dateRecieved = StructuralObject.SetValidValue(value, "dateRecieved");
                ReportPropertyChanged("dateRecieved");
                OndateRecievedChanged();
            }
        }
        private global::System.DateTime _dateRecieved;
        partial void OndateRecievedChanging(global::System.DateTime value);
        partial void OndateRecievedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateReturned
        {
            get
            {
                return _dateReturned;
            }
            set
            {
                OndateReturnedChanging(value);
                ReportPropertyChanging("dateReturned");
                _dateReturned = StructuralObject.SetValidValue(value, "dateReturned");
                ReportPropertyChanged("dateReturned");
                OndateReturnedChanged();
            }
        }
        private global::System.DateTime _dateReturned;
        partial void OndateReturnedChanging(global::System.DateTime value);
        partial void OndateReturnedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateWantedReturn
        {
            get
            {
                return _dateWantedReturn;
            }
            set
            {
                OndateWantedReturnChanging(value);
                ReportPropertyChanging("dateWantedReturn");
                _dateWantedReturn = StructuralObject.SetValidValue(value, "dateWantedReturn");
                ReportPropertyChanged("dateWantedReturn");
                OndateWantedReturnChanged();
            }
        }
        private global::System.DateTime _dateWantedReturn;
        partial void OndateWantedReturnChanging(global::System.DateTime value);
        partial void OndateWantedReturnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 giverRating
        {
            get
            {
                return _giverRating;
            }
            set
            {
                OngiverRatingChanging(value);
                ReportPropertyChanging("giverRating");
                _giverRating = StructuralObject.SetValidValue(value, "giverRating");
                ReportPropertyChanged("giverRating");
                OngiverRatingChanged();
            }
        }
        private global::System.Int32 _giverRating;
        partial void OngiverRatingChanging(global::System.Int32 value);
        partial void OngiverRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 recieverRating
        {
            get
            {
                return _recieverRating;
            }
            set
            {
                OnrecieverRatingChanging(value);
                ReportPropertyChanging("recieverRating");
                _recieverRating = StructuralObject.SetValidValue(value, "recieverRating");
                ReportPropertyChanged("recieverRating");
                OnrecieverRatingChanged();
            }
        }
        private global::System.Int32 _recieverRating;
        partial void OnrecieverRatingChanging(global::System.Int32 value);
        partial void OnrecieverRatingChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareStuffModel", "ItemRequest", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("ShareStuffModel.ItemRequest", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("ShareStuffModel.ItemRequest", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("ShareStuffModel.ItemRequest", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("ShareStuffModel.ItemRequest", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareStuffModel", "UserRequest", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ShareStuffModel.UserRequest", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ShareStuffModel.UserRequest", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ShareStuffModel.UserRequest", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ShareStuffModel.UserRequest", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareStuffModel", "LocationRequest", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("ShareStuffModel.LocationRequest", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("ShareStuffModel.LocationRequest", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("ShareStuffModel.LocationRequest", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("ShareStuffModel.LocationRequest", "Location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareStuffModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ShareStuffModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="email">Initial value of the email property.</param>
        /// <param name="password">Initial value of the password property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="reputation">Initial value of the reputation property.</param>
        /// <param name="location_id">Initial value of the location_id property.</param>
        /// <param name="isFlagged">Initial value of the isFlagged property.</param>
        /// <param name="isDisabled">Initial value of the isDisabled property.</param>
        /// <param name="isAdmin">Initial value of the isAdmin property.</param>
        /// <param name="isDeleted">Initial value of the isDeleted property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String email, global::System.String password, global::System.String name, global::System.Int32 reputation, global::System.Int32 location_id, global::System.Boolean isFlagged, global::System.Boolean isDisabled, global::System.Boolean isAdmin, global::System.Boolean isDeleted)
        {
            User user = new User();
            user.id = id;
            user.email = email;
            user.password = password;
            user.name = name;
            user.reputation = reputation;
            user.location_id = location_id;
            user.isFlagged = isFlagged;
            user.isDisabled = isDisabled;
            user.isAdmin = isAdmin;
            user.isDeleted = isDeleted;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, false, "email");
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false, "password");
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 reputation
        {
            get
            {
                return _reputation;
            }
            set
            {
                OnreputationChanging(value);
                ReportPropertyChanging("reputation");
                _reputation = StructuralObject.SetValidValue(value, "reputation");
                ReportPropertyChanged("reputation");
                OnreputationChanged();
            }
        }
        private global::System.Int32 _reputation;
        partial void OnreputationChanging(global::System.Int32 value);
        partial void OnreputationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 location_id
        {
            get
            {
                return _location_id;
            }
            set
            {
                Onlocation_idChanging(value);
                ReportPropertyChanging("location_id");
                _location_id = StructuralObject.SetValidValue(value, "location_id");
                ReportPropertyChanged("location_id");
                Onlocation_idChanged();
            }
        }
        private global::System.Int32 _location_id;
        partial void Onlocation_idChanging(global::System.Int32 value);
        partial void Onlocation_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isFlagged
        {
            get
            {
                return _isFlagged;
            }
            set
            {
                OnisFlaggedChanging(value);
                ReportPropertyChanging("isFlagged");
                _isFlagged = StructuralObject.SetValidValue(value, "isFlagged");
                ReportPropertyChanged("isFlagged");
                OnisFlaggedChanged();
            }
        }
        private global::System.Boolean _isFlagged;
        partial void OnisFlaggedChanging(global::System.Boolean value);
        partial void OnisFlaggedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isDisabled
        {
            get
            {
                return _isDisabled;
            }
            set
            {
                OnisDisabledChanging(value);
                ReportPropertyChanging("isDisabled");
                _isDisabled = StructuralObject.SetValidValue(value, "isDisabled");
                ReportPropertyChanged("isDisabled");
                OnisDisabledChanged();
            }
        }
        private global::System.Boolean _isDisabled;
        partial void OnisDisabledChanging(global::System.Boolean value);
        partial void OnisDisabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isAdmin
        {
            get
            {
                return _isAdmin;
            }
            set
            {
                OnisAdminChanging(value);
                ReportPropertyChanging("isAdmin");
                _isAdmin = StructuralObject.SetValidValue(value, "isAdmin");
                ReportPropertyChanged("isAdmin");
                OnisAdminChanged();
            }
        }
        private global::System.Boolean _isAdmin;
        partial void OnisAdminChanging(global::System.Boolean value);
        partial void OnisAdminChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isDeleted
        {
            get
            {
                return _isDeleted;
            }
            set
            {
                OnisDeletedChanging(value);
                ReportPropertyChanging("isDeleted");
                _isDeleted = StructuralObject.SetValidValue(value, "isDeleted");
                ReportPropertyChanged("isDeleted");
                OnisDeletedChanged();
            }
        }
        private global::System.Boolean _isDeleted;
        partial void OnisDeletedChanging(global::System.Boolean value);
        partial void OnisDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareStuffModel", "UserLocation", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("ShareStuffModel.UserLocation", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("ShareStuffModel.UserLocation", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("ShareStuffModel.UserLocation", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("ShareStuffModel.UserLocation", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareStuffModel", "UserRequest", "Request")]
        public EntityCollection<Request> Requests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Request>("ShareStuffModel.UserRequest", "Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Request>("ShareStuffModel.UserRequest", "Request", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ShareStuffModel", "UserItem", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("ShareStuffModel.UserItem", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("ShareStuffModel.UserItem", "Item", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
