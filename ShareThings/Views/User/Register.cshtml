@model ShareThings.Models.User

@{
    ViewBag.Title = "Create Account";
}

<h2>Create New Account</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <div class="form">

        <i>Enter in the following information to get started</i><br />
        <br />

        <div class="editor-label">
            @Html.LabelFor(model => model.email, "Email")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.email, new { @class = "txtInput" })
            @Html.ValidationMessageFor(model => model.email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.password, "Password")
        </div>
        <div class="editor-field">
            @Html.PasswordFor(model => model.password, new { @class = "txtInput" })
            @Html.ValidationMessageFor(model => model.password)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.name, "Full Name")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.name, new { @class = "txtInput" })
            @Html.ValidationMessageFor(model => model.name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.location_id, "Location")
        </div>
        <div class="editor-field">
                @Html.DropDownList("location_id", null, new { @class = "txtInput" })
                @Html.ValidationMessageFor(model => model.location_id)
        </div>

        @if (ShareThings.Content.SessionThings.IsUserAdmin)
        {
            <div class="editor-label">
                @Html.LabelFor(model => model.reputation)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.reputation)
                @Html.ValidationMessageFor(model => model.reputation)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.isFlagged)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.isFlagged)
                @Html.ValidationMessageFor(model => model.isFlagged)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.isDisabled)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.isDisabled)
                @Html.ValidationMessageFor(model => model.isDisabled)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.isAdmin)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.isAdmin)
                @Html.ValidationMessageFor(model => model.isAdmin)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.isDeleted)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.isDeleted)
                @Html.ValidationMessageFor(model => model.isDeleted)
            </div>
        }
        <p>
            <input type="submit" value="Create" />
        </p>

    </div>
}

<div>
    Already have an account? @Html.ActionLink("Login", "Login") instead.
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
